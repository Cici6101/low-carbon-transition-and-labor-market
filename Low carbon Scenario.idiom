COMM Master IDIOM file for E3ME version 5

COMM Inputs are:
COMM INPUT 2 - Scenario controls
COMM INPUT 4 - Modifications
COMM INPUT 10 - U.db1
COMM INPUT 11 - S.db1
COMM INPUT 12 - F.db1
COMM INPUT 13 - E.db1
COMM INPUT 14 - T.db1
COMM INPUT 15 - X.db1
COMM INPUT 16 - B.db1
COMM INPUT 19 - C.db1
COMM INPUT 20 - M.db1
COMM INPUT 21 - Z.db1
COMM INPUT 22 - O.db1
COMM INPUT 17,18 - DUMP

SWITCH TEST ; SWITCH NO ECHO ; SWITCH NO TRACE
SELECT OUTPUT 18 DUMP ; SELECT INPUT 18 DUMP 
RESTART 2010
INPUT
SOLVE
SWITCH COLUMN
COMM Turn CALIB on for remainder of historical period
SWITCH CALIB

COMM Default keep everything calibrated until told otherwise
CALIB PQEX,PQEM,YRW,YRE,RSC,CR,GR,KR,QEX,QEM,QR,YR,PYH,PCR,PGR,PVR,YRH,PKR ON
CALIB TREU,TRC,TRY,TRM,RDW,LRP,RRI,FR0,FRCT,FROT,FRGT,FRET,FRJT,PJR,REM ON
CALIB QIX,QIM,RPT,RFT,PMR,FMR ON
CALIB YRN,IR OFF
CALIB RVEH,RVKM ON

COMM IRUN for baseline
INTE IRUN 1615

COMM Switch to allow feedback from FTT to E3ME (0=No, 1=Yes)
INTE IFFB 1

COMM ISWW determines how wage rates are dealt with
INTE ISWW 3

COMM Health Impacts: do we want this to be 0 in the exogenous so that it doesn't affect residuals
INTE HEAL 0

COMM Set print variable
INTE IPRI 1

COMM TAXES SET TO 2000 PRICES (EG CARBON TAX)
LET ICTY = 2010
LET JPQD(16,38)=1        | YR+QRM-QRX too close to 0 in forecast

COMM Switch for lump sum revenue recycling (1=on). Only works with certain taxes
COMM Check code.
LET TSSW = 0
LET ISWF = 1
LET JSWP = 1

COMM Things to happen in the first year (currently 2010)
 LET YEAR = 2010
 LET IBAS = 0
 COMM READ SCENARIO CONTROLS (FROM FE AND \E3ME\IN\SCENARIOS) 
 SELECT INPUT 2 GEM
 READ EUYM ; LET JSWU=EUYM
 READ EUYM ; LET IMTX=EUYM
 READ RTEA,RTCA,REPX
 READ FEDS,JEDS,FETS,JETS
 READ ETSW,RRTE,RRTR,RRVT,REPA
 READ MT01,MT03,MT04,MT05,MT06,MT07
 READ MEDS,MMTR

 COMM FTT Varirables
SELECT INPUT 19 DB1 |C.DB1
 COMM Cost curve data
 GETP MCSC(?:01) FTT 31080100
 COMM FTT:Power data
 GETP MCET(?:01) FTT 31070100
 GETP MEWA(?:01) FTT 31060100
 COMM FTT:Transport data
 GETP TTC(?:01) FTT 32010100
 COMM FTT:Heating data
 GETP HTC(?:01) FTT 33010100 
 COMM FTT:Steel cost data
 GETP STC(?:01) FTT 34010100     
COMM End of things to happen in the first year

COMM ------------------------------------------------------------------
COMM Start of annual loop. Everything below here is called every year!
COMM ------------------------------------------------------------------
LET FINI = 2050
FOR YEAR = 2011 TO 2050
 DISP INTEGER YEAR

COMM Air Transport sector not included in ETS before 2013
 IF YEAR EQ 2012; DO
   FOR LL=1 TO 27
     LET FETS(17,LL)=1
   LOOP LL
     LET FETS(17,31)=1
 END IF

COMM Set JSWU switch equal to 7 so that the carbon price is exogenous
 IF YEAR EQ 2013 LET JSWU = 7

COMM FTT regions to be excluded from FTT 1 is include 0 is exclude
 LET JFTS = JFTS*0.0+1.0

COMM Set CALIB years (for calculating shares, etc.)
 IF YEAR EQ 2020 SWITCH NO CALIB


COMM Calibration section
 COMM SFSW 23 (unemployment).
 FOR LL=1 TO 71
  LET SFSW(23,LL)=1
  IF YEAR GT 2015 LET SFSW(23,LL)=0
 LOOP LL
 LET RUTR=0*RUTR+0.01
 LET SFSW(23,01)=1
 LET SFSW(23,09)=1
 LET SFSW(23,18)=1
 LET SFSW(23,22)=1
 LET SFSW(23,32)=1 
 LET SFSW(23,33)=1 
 LET SFSW(23,48)=1 
 LET SFSW(23,26)=1 
 LET SFSW(23,30)=1 
 LET SFSW(23,60)=1 
 LET SFSW(23,56)=1 
 LET SFSW(23,40)=1 
 LET SFSW(23,52)=1 
 LET SFSW(23,11)=1 
 LET SFSW(23,49)=1 
 LET SFSW(23,59)=1 


 COMM Initial values for 2000
 CALIB TREU,TRC,TRG,TRK,TRY,TRM ON
 CALIB QRC,QRG,QRK OFF
 CALIB YR,QR,RSC,CR,YRH,YRE,LRP,KR,RRI,QEX,PQEX,PYH,IR ON
 CALIB QEM,PQEM,QIX,QIM,PCR,PGR,PVR,PKR,YRW ON
 CALIB FR0,FRCT,FROT,FRGT,FRET,FRJT,PJR ON
 IF YEAR GE 2018 CALIB PJR OFF
 CALIB PQRZ,QZXI ON
 CALIB MU01,MU02,MU03,MU04,MU05,MU06,MU07,MU08 ON
 CALIB RVEH,RVKM ON
 CALIB RFD,FRFD ON

 COMM CALIBs to change during forecast
 IF YEAR GT 2018 CALIB QEU OFF
 IF YEAR GT 2018 CALIB QZXI,PQRZ OFF
 IF YEAR GT 2018 CALIB PCR,PVR,PGR,PKR,YRN OFF
 IF YEAR GT 2020 ; DO
  CALIB YRH,QIX,QEX,QR,YR,YRE,RRI,CR,RSC,PQEX,PQEM,PYH OFF
  CALIB QEM,QIM,LRP,YRW,KR OFF
  CALIB RDW OFF
  CALIB IR OFF
  CALIB GR OFF
 END
COMM IF YEAR GT 2016 ;COMM DO
COMM  CALIB IR OFF
COMM  CALIB GR OFF 
COMM END
 IF YEAR GT 2011 CALIB MU01,MU02,MU03,MU04,MU05,MU06,MU07 OFF
 IF YEAR GT 2014 CALIB RVEH,RVKM OFF
 IF YEAR GT 2020 CALIB FR0,FRCT,FROT,FRGT,FRET,FRBT OFF
 IF YEAR GT 2020 CALIB FRJT OFF
 IF YEAR GT 2016 CALIB REM OFF
 IF YEAR GT 2013 CALIB RFD,FRFD OFF
 
 COMM Set switch for calibration of fuel use - data goes up to 2012
 INTE JSWE 2 

COMM No more CALIBs or SFSW or JSWE after this point please
 
COMM Set value of CHECK
 IF YEAR GT 2018  CHECK FR0,FRCT,FROT,FRGT,FRET,FRBT,RPT,RFT,PMR,FMR OFF
 IF YEAR GT 2018 CHECK RSC,CR,KR,QEX,QEM,QIX,QIM,YRH,YRE,PYH OFF
 IF YEAR GT 2018 CHECK PQEX,PQEM,YRW,LRP,RRI,RDW OFF
 IF YEAR GT 2011 CHECK MU01,MU02,MU03,MU04,MU05,MU06 OFF
 IF YEAR GT 2011 CHECK MU07,MU08 OFF
 IF YEAR GT 2014 CHECK RVEH,RVKM OFF
 IF YEAR GT 2013 CHECK RFD,FRFD OFF
  

COMM Choose convergence criteria
 CRITERION QBIT 1. PJR 1. FR0 1. CR 3.0
COMM CRITERION QBIT 2 PJR 2 FR0 2 CR 6.0
 CRITERION QBIT 2 PJR 3 FR0 3 CR 6.0
 CRITERION PQRD .5 YRWS 5.0
COMM  CRITERION QBIT 3 PJR 4 FR0 4 CR 7

COMM Turn on tests
 SWITCH TEST

COMM Choose iterations to get report in .VER file
 IF YEAR EQ 2011 INTE ITR1 10 ITR2 85                          
 IF YEAR EQ 2015 INTE ITR1 10 ITR2 55
 IF YEAR EQ 2020 INTE ITR1 10 ITR2 55                           
COMM Set initial values for trade indicators 
 LET PQZA=PQRZ
 LET QZXA=QZXI

COMM SET REGU PRICE DIFFERENTIALS
LET PREG = 0.0*PREG
 
COMM Inflation
 COMM Set UK target to 2.5% pa
 LET RTIN(15)=2.5


COMM Reset residuals - these are read in below anyway
 LET RSCR=RSCR*0+1.0
 LET RDWR=RDWR*0+1.0
 LET YRWR=YRWR*0+1.0
 LET YRER=YRWR
 LET YEMR=YRWR
 LET PYHR=YRWR
 LET PYRR=PYHR
 LET PEMR=PEMR*0+1.0
 LET PEXR=PEMR
 LET PIXR=PEMR
 LET PIMR=PEMR
 LET KRR=KRR*0+1.0
 LET LRPR=LRPR*0+1.0
 LET CRR=CRR*0+1.0
 LET RRIR=RRIR*0
 LET QEXR=QEXR*0+1.0
 LET QIXR=QEXR
 LET QEMR=QEXR
 LET QIMR=QEXR
 LET YRHR=YRWR
 LET FR0R=0*FR0R+1.0
 LET FRCR=0*FRCR+1.0
 LET FROR=0*FROR+1.0
 LET FRGR=0*FRGR+1.0
 LET FRER=0*FRER+1.0
 LET FRBR=0*FRBR+1.0
 LET MI1R=0*MI1R+1.0
 LET MI2R=0*MI2R+1.0
 LET MI3R=0*MI3R+1.0
 LET MI4R=0*MI4R+1.0
 LET MI5R=0*MI5R+1.0
 LET MI6R=0*MI6R+1.0
 LET MI7R=0*MI7R+1.0
 LET RVHR=RVHR*0+1.0
 LET RVKR=RVKR*0+1.0
 LET RFDR=RFDR*0+1.0
 LET FRFR=FRFR*0+1.0
 
COMM Read in logistics curves. Used to update I-O etc in UPDATE
 SELECT INPUT 15 DB1
 GETA QRDC(?:01) 7710061,C(YEAR-1970)
 IF YEAR EQ 2011;DO

 GET PARS QQ46(?:01) CONV 24369010 ; GET PARS QQ46(?:02) CONV 24369020 
 GET PARS QQ46(?:03) CONV 24369030 ; GET PARS QQ46(?:04) CONV 24369040
 GET PARS QQ46(?:05) CONV 24369050 ; GET PARS QQ46(?:06) CONV 24369060
 GET PARS QQ46(?:07) CONV 24369070 ; GET PARS QQ46(?:08) CONV 24369080
 GET PARS QQ46(?:09) CONV 24369090 ; GET PARS QQ46(?:10) CONV 24369100
 GET PARS QQ46(?:11) CONV 24369110 ; GET PARS QQ46(?:12) CONV 24369120
 GET PARS QQ46(?:13) CONV 24369130 ; GET PARS QQ46(?:14) CONV 24369140
 GET PARS QQ46(?:15) CONV 24369150 ; GET PARS QQ46(?:16) CONV 24369160
 GET PARS QQ46(?:17) CONV 24369170 ; GET PARS QQ46(?:18) CONV 24369180
 GET PARS QQ46(?:19) CONV 24369190 ; GET PARS QQ46(?:20) CONV 24369200                        
 GET PARS QQ46(?:21) CONV 24369210 ; GET PARS QQ46(?:22) CONV 24369220                        
 GET PARS QQ46(?:23) CONV 24369230 ; GET PARS QQ46(?:24) CONV 24369240                        
 GET PARS QQ46(?:25) CONV 24369250 ; GET PARS QQ46(?:26) CONV 24369260 
 GET PARS QQ46(?:27) CONV 24369270 ; GET PARS QQ46(?:28) CONV 24369280 
 GET PARS QQ46(?:29) CONV 24369290 ; GET PARS QQ46(?:30) CONV 24369300 
 GET PARS QQ46(?:31) CONV 24369310 ; GET PARS QQ46(?:32) CONV 24369320 
 GET PARS QQ46(?:33) CONV 24369330 ; GET PARS QQ46(?:34) CONV 24369340 
 GET PARS QQ46(?:35) CONV 24369350 ; GET PARS QQ46(?:36) CONV 24369360 
 GET PARS QQ46(?:37) CONV 24369370 ; GET PARS QQ46(?:38) CONV 24369380 
 GET PARS QQ46(?:39) CONV 24369390 ; GET PARS QQ46(?:40) CONV 24369400 
 GET PARS QQ46(?:41) CONV 24369410 ; GET PARS QQ46(?:42) CONV 24369420 
 GET PARS QQ46(?:43) CONV 24369430 ; GET PARS QQ46(?:44) CONV 24369440 
 GET PARS QQ46(?:45) CONV 24369450 ; GET PARS QQ46(?:46) CONV 24369460 
 GET PARS QQ46(?:47) CONV 24369470 ; GET PARS QQ46(?:48) CONV 24369480
 GET PARS QQ46(?:49) CONV 24369490 ; GET PARS QQ46(?:50) CONV 24369500
 GET PARS QQ46(?:51) CONV 24369510 ; GET PARS QQ46(?:52) CONV 24369520
 GET PARS QQ46(?:53) CONV 24369530 ; GET PARS QQ46(?:54) CONV 24369540 
 GET PARS QQ46(?:55) CONV 24369550 ; GET PARS QQ46(?:56) CONV 24369560 
 GET PARS QQ46(?:57) CONV 24369570 ; GET PARS QQ46(?:58) CONV 24369580 
 GET PARS QQ46(?:59) CONV 24369590 
 GET PARS QQ46(?:60) CONV 24369590 
 GET PARS QQ46(?:61) CONV 24369590 
 GET PARS QQ46(?:62) CONV 24369590  
 GET PARS QQ46(?:63) CONV 24369590  
 GET PARS QQ46(?:64) CONV 24369590  
 GET PARS QQ46(?:65) CONV 24369590  
 GET PARS QQ46(?:66) CONV 24369590  
 GET PARS QQ46(?:67) CONV 24369590  
 GET PARS QQ46(?:68) CONV 24369590  
 GET PARS QQ46(?:69) CONV 24369590  
 GET PARS QQ46(?:70) CONV 24369590  
 GET PARS QQ46(?:71) CONV 24369590  
 

 END 

COMM EU minimum excise duties (base) for DG TAXUD
 LET ITAX = 0

COMM DG TAXUD (gradually increase to minimum in 2017 for middle distillates (transport) 
 SELECT INPUT 15 DB1
COMM DG TAXUD - TAX VARIABLE - baseline tax  2013
 IF YEAR EQ 2013; DO
  GET PARS FTB(?:01) TAX 71130163 ; GET PARS FTB(?:02) TAX 71130263 
  GET PARS FTB(?:03) TAX 71130363 ; GET PARS FTB(?:04) TAX 71130463
  GET PARS FTB(?:05) TAX 71130563 ; GET PARS FTB(?:06) TAX 71130663
  GET PARS FTB(?:07) TAX 71130763 ; GET PARS FTB(?:08) TAX 71130863
  GET PARS FTB(?:09) TAX 71130963 ; GET PARS FTB(?:10) TAX 71131063
  GET PARS FTB(?:11) TAX 71131163 ; GET PARS FTB(?:12) TAX 71131263
  GET PARS FTB(?:13) TAX 71131363 ; GET PARS FTB(?:14) TAX 71131463
  GET PARS FTB(?:15) TAX 71131563 ; GET PARS FTB(?:16) TAX 71131663
  GET PARS FTB(?:17) TAX 71131763 ; GET PARS FTB(?:18) TAX 71131863
  GET PARS FTB(?:19) TAX 71131963 ; GET PARS FTB(?:20) TAX 71132063                        
  GET PARS FTB(?:21) TAX 71132163 ; GET PARS FTB(?:22) TAX 71132263                        
  GET PARS FTB(?:23) TAX 71132363 ; GET PARS FTB(?:24) TAX 71132463                        
  GET PARS FTB(?:25) TAX 71132563 ; GET PARS FTB(?:26) TAX 71132663                        
  GET PARS FTB(?:27) TAX 71132763
  
  GET PARS FJT(?:01) TAX 71130163 ; GET PARS FJT(?:02) TAX 71130263 
  GET PARS FJT(?:03) TAX 71130363 ; GET PARS FJT(?:04) TAX 71130463
  GET PARS FJT(?:05) TAX 71130563 ; GET PARS FJT(?:06) TAX 71130663
  GET PARS FJT(?:07) TAX 71130763 ; GET PARS FJT(?:08) TAX 71130863
  GET PARS FJT(?:09) TAX 71130963 ; GET PARS FJT(?:10) TAX 71131063
  GET PARS FJT(?:11) TAX 71131163 ; GET PARS FJT(?:12) TAX 71131263
  GET PARS FJT(?:13) TAX 71131363 ; GET PARS FJT(?:14) TAX 71131463
  GET PARS FJT(?:15) TAX 71131563 ; GET PARS FJT(?:16) TAX 71131663
  GET PARS FJT(?:17) TAX 71131763 ; GET PARS FJT(?:18) TAX 71131863
  GET PARS FJT(?:19) TAX 71131963 ; GET PARS FJT(?:20) TAX 71132063                        
  GET PARS FJT(?:21) TAX 71132163 ; GET PARS FJT(?:22) TAX 71132263                        
  GET PARS FJT(?:23) TAX 71132363 ; GET PARS FJT(?:24) TAX 71132463                        
  GET PARS FJT(?:25) TAX 71132563 ; GET PARS FJT(?:26) TAX 71132663                        
  GET PARS FJT(?:27) TAX 71132763
 END
 
COMM DG TAXUD - TAX VARIABLE - baseline tax  2014
 IF YEAR EQ 2014; DO
  GET PARS FTB(?:01) TAX 71140163 ; GET PARS FTB(?:02) TAX 71140263 
  GET PARS FTB(?:03) TAX 71140363 ; GET PARS FTB(?:04) TAX 71140463
  GET PARS FTB(?:05) TAX 71140563 ; GET PARS FTB(?:06) TAX 71140663
  GET PARS FTB(?:07) TAX 71140763 ; GET PARS FTB(?:08) TAX 71140863
  GET PARS FTB(?:09) TAX 71140963 ; GET PARS FTB(?:10) TAX 71141063
  GET PARS FTB(?:11) TAX 71141163 ; GET PARS FTB(?:12) TAX 71141263
  GET PARS FTB(?:13) TAX 71141363 ; GET PARS FTB(?:14) TAX 71141463
  GET PARS FTB(?:15) TAX 71141563 ; GET PARS FTB(?:16) TAX 71141663
  GET PARS FTB(?:17) TAX 71141763 ; GET PARS FTB(?:18) TAX 71141863
  GET PARS FTB(?:19) TAX 71141963 ; GET PARS FTB(?:20) TAX 71142063                        
  GET PARS FTB(?:21) TAX 71142163 ; GET PARS FTB(?:22) TAX 71142263                        
  GET PARS FTB(?:23) TAX 71142363 ; GET PARS FTB(?:24) TAX 71142463                        
  GET PARS FTB(?:25) TAX 71142563 ; GET PARS FTB(?:26) TAX 71142663                        
  GET PARS FTB(?:27) TAX 71142763
  
  GET PARS FJT(?:01) TAX 71140163 ; GET PARS FJT(?:02) TAX 71140263 
  GET PARS FJT(?:03) TAX 71140363 ; GET PARS FJT(?:04) TAX 71140463
  GET PARS FJT(?:05) TAX 71140563 ; GET PARS FJT(?:06) TAX 71140663
  GET PARS FJT(?:07) TAX 71140763 ; GET PARS FJT(?:08) TAX 71140863
  GET PARS FJT(?:09) TAX 71140963 ; GET PARS FJT(?:10) TAX 71141063
  GET PARS FJT(?:11) TAX 71141163 ; GET PARS FJT(?:12) TAX 71141263
  GET PARS FJT(?:13) TAX 71141363 ; GET PARS FJT(?:14) TAX 71141463
  GET PARS FJT(?:15) TAX 71141563 ; GET PARS FJT(?:16) TAX 71141663
  GET PARS FJT(?:17) TAX 71141763 ; GET PARS FJT(?:18) TAX 71141863
  GET PARS FJT(?:19) TAX 71141963 ; GET PARS FJT(?:20) TAX 71142063                        
  GET PARS FJT(?:21) TAX 71142163 ; GET PARS FJT(?:22) TAX 71142263                        
  GET PARS FJT(?:23) TAX 71142363 ; GET PARS FJT(?:24) TAX 71142463                        
  GET PARS FJT(?:25) TAX 71142563 ; GET PARS FJT(?:26) TAX 71142663                        
  GET PARS FJT(?:27) TAX 71142763
 END
 
COMM DG TAXUD - TAX VARIABLE - baseline tax  2015
 IF YEAR EQ 2015; DO
  GET PARS FTB(?:01) TAX 71150163 ; GET PARS FTB(?:02) TAX 71150263 
  GET PARS FTB(?:03) TAX 71150363 ; GET PARS FTB(?:04) TAX 71150463
  GET PARS FTB(?:05) TAX 71150563 ; GET PARS FTB(?:06) TAX 71150663
  GET PARS FTB(?:07) TAX 71150763 ; GET PARS FTB(?:08) TAX 71150863
  GET PARS FTB(?:09) TAX 71150963 ; GET PARS FTB(?:10) TAX 71151063
  GET PARS FTB(?:11) TAX 71151163 ; GET PARS FTB(?:12) TAX 71151263
  GET PARS FTB(?:13) TAX 71151363 ; GET PARS FTB(?:14) TAX 71151463
  GET PARS FTB(?:15) TAX 71151563 ; GET PARS FTB(?:16) TAX 71151663
  GET PARS FTB(?:17) TAX 71151763 ; GET PARS FTB(?:18) TAX 71151863
  GET PARS FTB(?:19) TAX 71151963 ; GET PARS FTB(?:20) TAX 71152063                        
  GET PARS FTB(?:21) TAX 71152163 ; GET PARS FTB(?:22) TAX 71152263                        
  GET PARS FTB(?:23) TAX 71152363 ; GET PARS FTB(?:24) TAX 71152463                        
  GET PARS FTB(?:25) TAX 71152563 ; GET PARS FTB(?:26) TAX 71152663                        
  GET PARS FTB(?:27) TAX 71152763
  
  GET PARS FJT(?:01) TAX 71150163 ; GET PARS FJT(?:02) TAX 71150263 
  GET PARS FJT(?:03) TAX 71150363 ; GET PARS FJT(?:04) TAX 71150463
  GET PARS FJT(?:05) TAX 71150563 ; GET PARS FJT(?:06) TAX 71150663
  GET PARS FJT(?:07) TAX 71150763 ; GET PARS FJT(?:08) TAX 71150863
  GET PARS FJT(?:09) TAX 71150963 ; GET PARS FJT(?:10) TAX 71151063
  GET PARS FJT(?:11) TAX 71151163 ; GET PARS FJT(?:12) TAX 71151263
  GET PARS FJT(?:13) TAX 71151363 ; GET PARS FJT(?:14) TAX 71151463
  GET PARS FJT(?:15) TAX 71151563 ; GET PARS FJT(?:16) TAX 71151663
  GET PARS FJT(?:17) TAX 71151763 ; GET PARS FJT(?:18) TAX 71151863
  GET PARS FJT(?:19) TAX 71151963 ; GET PARS FJT(?:20) TAX 71152063                        
  GET PARS FJT(?:21) TAX 71152163 ; GET PARS FJT(?:22) TAX 71152263                        
  GET PARS FJT(?:23) TAX 71152363 ; GET PARS FJT(?:24) TAX 71152463                        
  GET PARS FJT(?:25) TAX 71152563 ; GET PARS FJT(?:26) TAX 71152663                        
  GET PARS FJT(?:27) TAX 71152763
 END
 
COMM DG TAXUD - TAX VARIABLE - baseline tax  2016
 IF YEAR EQ 2016; DO
  GET PARS FTB(?:01) TAX 71160163 ; GET PARS FTB(?:02) TAX 71160263 
  GET PARS FTB(?:03) TAX 71160363 ; GET PARS FTB(?:04) TAX 71160463
  GET PARS FTB(?:05) TAX 71160563 ; GET PARS FTB(?:06) TAX 71160663
  GET PARS FTB(?:07) TAX 71160763 ; GET PARS FTB(?:08) TAX 71160863
  GET PARS FTB(?:09) TAX 71160963 ; GET PARS FTB(?:10) TAX 71161063
  GET PARS FTB(?:11) TAX 71161163 ; GET PARS FTB(?:12) TAX 71161263
  GET PARS FTB(?:13) TAX 71161363 ; GET PARS FTB(?:14) TAX 71161463
  GET PARS FTB(?:15) TAX 71161563 ; GET PARS FTB(?:16) TAX 71161663
  GET PARS FTB(?:17) TAX 71161763 ; GET PARS FTB(?:18) TAX 71161863
  GET PARS FTB(?:19) TAX 71161963 ; GET PARS FTB(?:20) TAX 71162063                        
  GET PARS FTB(?:21) TAX 71162163 ; GET PARS FTB(?:22) TAX 71162263                        
  GET PARS FTB(?:23) TAX 71162363 ; GET PARS FTB(?:24) TAX 71162463                        
  GET PARS FTB(?:25) TAX 71162563 ; GET PARS FTB(?:26) TAX 71162663                        
  GET PARS FTB(?:27) TAX 71162763
  
  GET PARS FJT(?:01) TAX 71160163 ; GET PARS FJT(?:02) TAX 71160263 
  GET PARS FJT(?:03) TAX 71160363 ; GET PARS FJT(?:04) TAX 71160463
  GET PARS FJT(?:05) TAX 71160563 ; GET PARS FJT(?:06) TAX 71160663
  GET PARS FJT(?:07) TAX 71160763 ; GET PARS FJT(?:08) TAX 71160863
  GET PARS FJT(?:09) TAX 71160963 ; GET PARS FJT(?:10) TAX 71161063
  GET PARS FJT(?:11) TAX 71161163 ; GET PARS FJT(?:12) TAX 71161263
  GET PARS FJT(?:13) TAX 71161363 ; GET PARS FJT(?:14) TAX 71161463
  GET PARS FJT(?:15) TAX 71161563 ; GET PARS FJT(?:16) TAX 71161663
  GET PARS FJT(?:17) TAX 71161763 ; GET PARS FJT(?:18) TAX 71161863
  GET PARS FJT(?:19) TAX 71161963 ; GET PARS FJT(?:20) TAX 71162063                        
  GET PARS FJT(?:21) TAX 71162163 ; GET PARS FJT(?:22) TAX 71162263                        
  GET PARS FJT(?:23) TAX 71162363 ; GET PARS FJT(?:24) TAX 71162463                        
  GET PARS FJT(?:25) TAX 71162563 ; GET PARS FJT(?:26) TAX 71162663                        
  GET PARS FJT(?:27) TAX 71162763
 END
 
COMM DG TAXUD - TAX VARIABLE - baseline tax  2017
 IF YEAR EQ 2017; DO
  GET PARS FTB(?:01) TAX 71170163 ; GET PARS FTB(?:02) TAX 71170263 
  GET PARS FTB(?:03) TAX 71170363 ; GET PARS FTB(?:04) TAX 71170463
  GET PARS FTB(?:05) TAX 71170563 ; GET PARS FTB(?:06) TAX 71170663
  GET PARS FTB(?:07) TAX 71170763 ; GET PARS FTB(?:08) TAX 71170863
  GET PARS FTB(?:09) TAX 71170963 ; GET PARS FTB(?:10) TAX 71171063
  GET PARS FTB(?:11) TAX 71171163 ; GET PARS FTB(?:12) TAX 71171263
  GET PARS FTB(?:13) TAX 71171363 ; GET PARS FTB(?:14) TAX 71171463
  GET PARS FTB(?:15) TAX 71171563 ; GET PARS FTB(?:16) TAX 71171663
  GET PARS FTB(?:17) TAX 71171763 ; GET PARS FTB(?:18) TAX 71171863
  GET PARS FTB(?:19) TAX 71171963 ; GET PARS FTB(?:20) TAX 71172063                        
  GET PARS FTB(?:21) TAX 71172163 ; GET PARS FTB(?:22) TAX 71172263                        
  GET PARS FTB(?:23) TAX 71172363 ; GET PARS FTB(?:24) TAX 71172463                        
  GET PARS FTB(?:25) TAX 71172563 ; GET PARS FTB(?:26) TAX 71172663                        
  GET PARS FTB(?:27) TAX 71172763
  
  GET PARS FJT(?:01) TAX 71170163 ; GET PARS FJT(?:02) TAX 71170263 
  GET PARS FJT(?:03) TAX 71170363 ; GET PARS FJT(?:04) TAX 71170463
  GET PARS FJT(?:05) TAX 71170563 ; GET PARS FJT(?:06) TAX 71170663
  GET PARS FJT(?:07) TAX 71170763 ; GET PARS FJT(?:08) TAX 71170863
  GET PARS FJT(?:09) TAX 71170963 ; GET PARS FJT(?:10) TAX 71171063
  GET PARS FJT(?:11) TAX 71171163 ; GET PARS FJT(?:12) TAX 71171263
  GET PARS FJT(?:13) TAX 71171363 ; GET PARS FJT(?:14) TAX 71171463
  GET PARS FJT(?:15) TAX 71171563 ; GET PARS FJT(?:16) TAX 71171663
  GET PARS FJT(?:17) TAX 71171763 ; GET PARS FJT(?:18) TAX 71171863
  GET PARS FJT(?:19) TAX 71171963 ; GET PARS FJT(?:20) TAX 71172063                        
  GET PARS FJT(?:21) TAX 71172163 ; GET PARS FJT(?:22) TAX 71172263                        
  GET PARS FJT(?:23) TAX 71172363 ; GET PARS FJT(?:24) TAX 71172463                        
  GET PARS FJT(?:25) TAX 71172563 ; GET PARS FJT(?:26) TAX 71172663                        
  GET PARS FJT(?:27) TAX 71172763
 END

 COMM read in Updated QKC converter
 IF YEAR EQ 2011; DO
 GET PARS QRK(?:01) IO00 34001464 ; GET PARS QRK(?:02) IO00 34001464 
 GET PARS QRK(?:03) IO00 34001464 ; GET PARS QRK(?:04) IO00 34001464
 GET PARS QRK(?:05) IO00 34001464 ; GET PARS QRK(?:06) IO00 34001464
 GET PARS QRK(?:07) IO00 34001464 ; GET PARS QRK(?:08) IO00 34001464
 GET PARS QRK(?:09) IO00 34001464 ; GET PARS QRK(?:10) IO00 34001464
 GET PARS QRK(?:11) IO00 34001464 ; GET PARS QRK(?:12) IO00 34001464
 GET PARS QRK(?:13) IO00 34001464 ; GET PARS QRK(?:14) IO00 34001464
 GET PARS QRK(?:15) IO00 34001464 ; GET PARS QRK(?:16) IO00 34001464
 GET PARS QRK(?:17) IO00 34001464 ; GET PARS QRK(?:18) IO00 34001464
 GET PARS QRK(?:19) IO00 34001464 ; GET PARS QRK(?:20) IO00 34001464                        
 GET PARS QRK(?:21) IO00 34001464 ; GET PARS QRK(?:22) IO00 34001464                        
 GET PARS QRK(?:23) IO00 34001464 ; GET PARS QRK(?:24) IO00 34001464                        
 GET PARS QRK(?:25) IO00 34001464 ; GET PARS QRK(?:26) IO00 34001464 
 GET PARS QRK(?:27) IO00 34001464 ; GET PARS QRK(?:28) IO00 34001464 
 GET PARS QRK(?:29) IO00 34001464 ; GET PARS QRK(?:30) IO00 34001464 
 GET PARS QRK(?:31) IO00 34001464 ; GET PARS QRK(?:32) IO00 34001464 
 GET PARS QRK(?:33) IO00 34001464 ; GET PARS QRK(?:34) IO00 34001465 
 GET PARS QRK(?:35) IO00 34001465 ; GET PARS QRK(?:36) IO00 34001465 
 GET PARS QRK(?:37) IO00 34001465 ; GET PARS QRK(?:38) IO00 34001465 
 GET PARS QRK(?:39) IO00 34001465 ; GET PARS QRK(?:40) IO00 34001465 
 GET PARS QRK(?:41) IO00 34001465 ; GET PARS QRK(?:42) IO00 34001465 
 GET PARS QRK(?:43) IO00 34001465 ; GET PARS QRK(?:44) IO00 34001465 
 GET PARS QRK(?:45) IO00 34001465 ; GET PARS QRK(?:46) IO00 34001465 
 GET PARS QRK(?:47) IO00 34001465 ; GET PARS QRK(?:48) IO00 34001465
 GET PARS QRK(?:49) IO00 34001465 ; GET PARS QRK(?:50) IO00 34001465
 GET PARS QRK(?:51) IO00 34001465 ; GET PARS QRK(?:52) IO00 34001465
 GET PARS QRK(?:53) IO00 34001465 ; GET PARS QRK(?:54) IO00 34001465 
 GET PARS QRK(?:55) IO00 34001465 ; GET PARS QRK(?:56) IO00 34001465 
 GET PARS QRK(?:57) IO00 34001465 ; GET PARS QRK(?:58) IO00 34001465 
 GET PARS QRK(?:59) IO00 34001465
 GET PARS QRK(?:60) IO00 34001465 ; GET PARS QRK(?:61) IO00 34001465 
 GET PARS QRK(?:62) IO00 34001465                
 GET PARS QRK(?:63) IO00 34001465                
 GET PARS QRK(?:64) IO00 34001465                
 GET PARS QRK(?:65) IO00 34001465                
 GET PARS QRK(?:66) IO00 34001465                
 GET PARS QRK(?:67) IO00 34001465                
 GET PARS QRK(?:68) IO00 34001465                
 GET PARS QRK(?:69) IO00 34001465                
 GET PARS QRK(?:70) IO00 34001465                
 GET PARS QRK(?:71) IO00 34001465   

 END
COMM --------------------------------------------------------------------------
 UPDATE ALL
 COMM ASNS/LAGS IMPLEMENTED AT VERY END OF UPDATE
COMM --------------------------------------------------------------------------


  COMM Bilateral trade data
  COMM TAA is the actuals, TRA is calculated in the fortran
  COMM Input codes need to be revised once forecast data are ready !!!!!!!!!!!!!!!
  SELECT INPUT 16 DB1
  IF YEAR EQ 2011 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2012 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2013 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2014 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2015 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2016 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2017 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2018 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2019 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2020 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2021 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2022 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2023 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2024 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2025 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2026 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2027 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2028 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2029 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2030 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2031 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2032 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2033 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2034 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2035 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2036 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2037 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2038 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2039 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2040 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2041 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2042 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2043 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2044 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2045 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2046 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2047 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2048 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2049 GETP TAA(?:01) BTRA 70060101 
  IF YEAR EQ 2050 GETP TAA(?:01) BTRA 70060101 



 SELECT INPUT 12 DB1
 
 GETA FCO2(?:01) 1030041,C(YEAR-2002) 
 GETA FCPE(?:01) 1030042,C(YEAR-2002) 

 IF YEAR LE 2018; DO
   SELECT INPUT 13 DB1
  GETA ECO2(?:01) 81000101,C(YEAR-1989)
  GETA ESO2(?:01) 81000102,C(YEAR-1989)
  GETA ENOX(?:01) 81000103,C(YEAR-1989)
  GETA ECO(?:01) 81000104,C(YEAR-1989)
  GETA ECH4(?:01) 81000105,C(YEAR-1989)
  GETA EBS(?:01) 81000106,C(YEAR-1989)
  GETA EVOC(?:01) 81000107,C(YEAR-1989)
  GETA EP25(?:01) 81000108,C(YEAR-1989)
  GETA EN2O(?:01) 81000111,C(YEAR-1989)
  GETA EHFC(?:01) 81000112,C(YEAR-1989)
  GETA EPFC(?:01) 81000113,C(YEAR-1989)
  GETA ESF6(?:01) 81000114,C(YEAR-1989)
   LET EC2A=ECO2
   LET ESOA=ESO2
   LET ENOA=ENOX
   LET ECMA=ECO
   LET ECHA=ECH4
   LET EN2A=EN2O
   LET EHFA=EHFC
   LET EPFA=EPFC
   LET ESFA=ESF6
   LET EBSA=EBS
   LET EP2A=EP25
   SELECT INPUT 12 DB1
 END

COMM Economic variables from EF00
COMM biofuels employment
IF YEAR GE 2010 ; DO
    SELECT INPUT 14 DB1
   GET RBEC 30050001,C(YEAR-2002)
   SELECT INPUT 12 DB1
END   
 
COMM exchange rate now endogenous  - not read from assumption file 
IF YEAR LE 2014 ; DO
  SELECT INPUT 14 DB1
  GET EX 98700060,C(YEAR-1969)    | EX gets transformed to 2005=1 below
  GET REX 98700060,C(41)          | REX store for base year
  LET EX = EX / (REX+0.000001)
  LET EXA = EX
  GET REX 98700060,C(YEAR-1969)   | REX exchange rate to euros (DE used as proxy before Euro)
  SELECT INPUT 12 DB1
END
 LET EXA(54) = 1.0

COMM Commodity price before assumption file kick in
IF DATE LT 2015; DO
  SELECT INPUT 14 DB1
  GET PMF 704936,C(YEAR-1969)   
  LET PMFA = PMF
  LET PM = PMF/EX(34)
  SELECT INPUT 12 DB1
END 

COMM Gross output
 GETA PQR(?:01) 10030035,C(YEAR-2002) 
 GETA QRA(?:01) 10030015,C(YEAR-2002) 
 LET PYRA=PQR
 LET YR=QRA
 LET QR=QRA
 LET PYR=PYRA
 LET YRNA=QRA
  
COMM Gross value added at market prices (as prices on EF00)
 GETA PYRM(?:01) 10030032,C(YEAR-2002) 
 GETA YRM(?:01) 10030012,C(YEAR-2002) 
 LET YRMA=YRM
 LET PYMA=PYRM
 LET RYM=CSUM(YRM)
  
COMM Gross value added at factor cost
 GETA PYRF(?:01) 10030033,C(YEAR-2002) 
 GETA YRF(?:01) 10030013,C(YEAR-2002) 
 LET YRFA=YRF
 LET PYFA=PYRF
 LET RYF=CSUM(YRF)

COMM Form YRVA as GVA at factor costs
 LET YRVA=YRF

COMM Price of domestic goods
 LET PYHA=PYH1*PQR/PQRL

COMM Consumption
 GETA CRA(?:01) 20030010,C(YEAR-2002) 
 LET CR=CRA
 LET RSC=CSUM(CRA)  
 LET RSCA=RSC
 
 IF YEAR LE 2018; DO
  SELECT INPUT 14 DB1
  GETA PCRA(?:01) 20700020,C(YEAR-1969) 
  SELECT INPUT 12 DB1
  LET PRSC=CSUM(PCRA)
  LET PCRA=(PCRA+.000001)/(CRA+.000001)
  LET PCRA=MATP(PCRA,DMAT(EX))
  LET PCR=PCRA
  LET PRSC=EX*(PRSC+.000001)/(RSC+.000001)
  LET PSCA = PRSC
  FOR JJ= 1 TO 71
  IF JJ > 33; DO
    LET PCR(28,JJ) =1.0
   END
   IF JJ < 34; DO
    LET PCR(43,JJ) =1.0
   END
  LOOP JJ
 END
 IF YEAR GT 2018; DO
  SELECT INPUT 11 DB1
   GET PSCA 71030005,C(YEAR-2010)
  SELECT INPUT 12 DB1
 END
 
COMM Investment
 GETA KRA(?:01) 41030010,C(YEAR-2002) 
 LET KR=KRA
 LET RSK=CSUM(KRA)
 IF YEAR LE 2018; DO
  SELECT INPUT 14 DB1
   GETA PKRA(?:01) 41700020,C(YEAR-1969)
  SELECT INPUT 12 DB1
  LET PKRA=MATP(((PKRA+.000001)/(KRA+.000001)),DMAT(EX))
  LET PKR=PKRA
 END


COMM Investment by asset
 COMM Currently unavailable in E3ME4
 LET VR=0.0*VR+1.0
 LET PVR=0.0*PVR+1.0
COMM Dual classification
 FOR JJ=1 TO 71
  IF JJ < 34 ; DO
   LET VR(4,JJ)=KR(69,JJ)
   LET PVR(4,JJ)=PKR(69,JJ)
  END 
  IF JJ > 33; DO
   LET VR(4,JJ)=KR(42,JJ)
   LET PVR(4,JJ)=PKR(42,JJ)
  END 
 LOOP JJ
 LET PVRA=PVR
 LET VRA=VR
 LET RDWA=TRAN(VRA(4,0))
 LET RDW=RDWA

 
COMM R&D spending
 GETA YRDS(?:01) 10030016,C(YEAR-2002) 
COMM Accumulated ICT-Investment
 GETA KQC(?:01) 41030013,C(YEAR-2002) 
 LET KQCA=KQC

COMMCOMM New technology accumulation indices (MONROE development)
COMM GETA YKNO(?:01) 10700019,C(YEAR-2002)
COMM GETA YCAP(?:01) 41700019,C(YEAR-2002)

 IF YEAR LE 2013; DO
  SELECT INPUT 14 DB1
COMM GINI coefficients
  GET RGIN 50954000,C(YEAR-1994)
  LET RGIA = RGIN

COMM Labour Skills, Stock
  GETA YRKS(?:01) 10700068,C(YEAR-1969) 
COMM ITC technology index
  GETA YRKC(?:01) 10700065,C(YEAR-1969) 
  LET YKCA=YRKC
COMM non-ITC technology index
  GETA YRKN(?:01) 10700066,C(YEAR-1969) 
  LET YKNA=YRKN
COMM non-ITC technology index
  GETA YRKE(?:01) 10700062,C(YEAR-1969) 

  SELECT INPUT 12 DB1
 END IF

 SELECT INPUT 11 DB1
 GETA YRKA(?:01) 10030069,C(YEAR-2010) 
 
 SELECT INPUT 12 DB1
COMM Single market  
 GET SVIM 98030061,C(YEAR-2002)

COMM Exports
 COMM Internal exports
 GETA QIXA(?:01) 11030010,C(YEAR-2002) 
 LET QIX=QIXA
 COMM QRXA total exports, load external then add internal
 GETA QEXA(?:01) 11030012,C(YEAR-2002) 
 LET QRXA=QEXA+QIXA
 LET QRX=QRXA
 LET RSX=CSUM(QRXA)
 LET RSIX=CSUM(QIXA)
 LET RSEX=CSUM(QEXA)
 COMM Export prices
 GETA PQXA(?:01) 11030030,C(YEAR-2002) 
 LET PQRX=PQXA
 LET PQEX=PQXA

COMM Imports
 COMM Internal imports
 GETA QIMA(?:01) 11030011,C(YEAR-2002) 
 LET QIM=QIMA
 COMM QRMA total imports, load external then add internal
 GETA QEMA(?:01) 11030013,C(YEAR-2002) 
 LET QEM=QEMA
 LET QRMA=QEMA+QIMA
 LET QRM=QRMA
 LET RSM=CSUM(QRMA)
 LET RSIM=CSUM(QIMA)
 LET RSEM=CSUM(QEMA)
 COMM Import prices
 GETA PQMA(?:01) 11030031,C(YEAR-2002) 
 COMM Store the discrepancy between internal imports and exports
 LET QXMI=RSUM(QIXA)-RSUM(QIMA)


 COMM Update prices to match actuals
 LET PQEX=PQXA; LET PQIX=PQXA; LET PQRX=PQXA
 LET PQEM=PQMA; LET PQIM=PQMA; LET PQRM=PQMA 
 LET PYRM=PYMA
 LET PQR=PYRA
 LET PYR=PYRA
 LET PYRF=PYFA
 COMM LET PYHA=PYH1*PQR/PQRL
 LET PRGA=PRGA*PRSC/PSC1
 
COMM   Population in thousands - assumptions

COMM Labour participation rates
 GETA LRP(?:01) 52030041,C(YEAR-2002) 
 LET LRPA = LRP

COMM Population
 GETA DPAR(?:01) 50030041,C(YEAR-2002) 
  
COMM Other LRP variables
 IF YEAR LE 2016; DO
 COMM Pension rates
  SELECT INPUT 14 DB1
  GET RPNR 99700060,C(YEAR-1969)
 COMM Ratio of unemployment to national rates
  SELECT INPUT 15 DB1
  IF YEAR EQ 2007 GET LRUN 51070060
  IF YEAR EQ 2008 GET LRUN 51080060
  IF YEAR EQ 2009 GET LRUN 51090060
  IF YEAR EQ 2010 GET LRUN 51100060
  IF YEAR EQ 2011 GET LRUN 51110060
  IF YEAR EQ 2012 GET LRUN 51120060
  IF YEAR EQ 2013 GET LRUN 51130060
COMM  IF YEAR EQ 2014 GET LRUN 51140060
COMM  IF YEAR EQ 2015 GET LRUN 51150060
COMM  IF YEAR EQ 2016 GET LRUN 51160060

 COMM Qualifications
  SELECT INPUT 14 DB1
  GETA LRQU(?:01) 51700060,C(YEAR-1969) 
 END IF
  
 SELECT INPUT 12 DB1
COMM Employment
 GETA YREA(?:01) 10030040,C(YEAR-2002) 
 LET YRE=YREA
 LET REMP=CSUM(YRE)

COMM Male and Female employment
  GETA YEMA(?:01) 20030040,C(YEAR-2002)
  GETA YREF(?:01) 30030040,C(YEAR-2002)
  LET YREM = YEMA

COMM Disaggregated YRE variables
 IF YEAR LE 2013; DO
   SELECT INPUT 14 DB1
   COMM Hours worked male
   GETA YWHM(?:01) 21700161,C(YEAR-1969)
   COMM Male wage
   GETA YRWM(?:01) 20700124,C(YEAR-1969)
 END IF

 IF YEAR GE 2008; DO
 SELECT INPUT 22 DB1
 IF YEAR LE 2030; DO
 GETA ORES(?:01) 10080141,C(YEAR-2007)
 GETA OREN(?:01) 10080142,C(YEAR-2007)
 GETA ORET(?:01) 10080143,C(YEAR-2007)
  END IF
 IF YEAR GT 2030; DO
 GETA ORES(?:01) 10080141,C(23)
 GETA OREN(?:01) 10080142,C(23)
 GETA ORET(?:01) 10080143,C(23)
  END IF
 END IF

 SELECT INPUT 12 DB1

COMM Hours Worked
 GETA YRHA(?:01) 10030061,C(YEAR-2002) 
 LET YRH=YRHA

COMM Employees
 IF YEAR LE 2018; DO
   SELECT INPUT 14 DB1
   GETA YREE(?:01) 10700041,C(YEAR-1969) 
   SELECT INPUT 12 DB1
 END 
 IF YEAR GT 2018 LET YREE = YRE*YREW/1000
 IF YEAR GT 2018 LET YEEA = YREA*YREW/1000 

COMM Labour costs by industry
 GETA YRLC(?:01) 10030024,C(YEAR-2002) 

COMM Regional incomes and tax rates (RVTT target VAT not used in E3ME4, RRDM removed)
COMM NB without these YRWS will not calibrate
COMM GET RERS 99030027,C(YEAR-2002)
COMM GET REES 99030028,C(YEAR-2002)
COMM GET RMTX 99030093,C(YEAR-2002)
COMM GET RVAV 06030025,C(YEAR-2002)
COMM GET RSVT 06030095,C(YEAR-2002) 
COMM GET RGFR 99030022,C(YEAR-2002)
COMM GET RDTX 99030023,C(YEAR-2002)
COMM GET RITX 99030024,C(YEAR-2002)
COMM GET RBEN 99030025,C(YEAR-2002)
 GET RUNR 98030063,C(YEAR-2002)
 GET RGDI 99030026,C(YEAR-2002) 
COMM GET RYWA 99030029,C(YEAR-2002) 
COMM  LET RGFR=100*1000*RGFR/(RGDP+0.000001)
  COMM Form total personal income including taxes and regional wages
COMM  LET RTPI=RGDI+RDTX+REES 

COMM Tax rates (YRWS used as store)
 LET RWS= RSUM(TRAN(YRLC))
 LET RWS = RWS / (1+RERR)
 LET RERS= RSUM(TRAN(YRLC))-RWS
 LET RETR=1+((RERS)/(RWS+.0000001))
COMM  LET RERR=RETR-1
COMM  LET RDTR=RDTX/(RWS+0.000001)
COMM  DISP VARS RETR
COMM Total wages, excluding taxes
 LET YRWS=MATP(YRLC,DMAT(1/RETR))
COMM  LET RWS=RSUM(TRAN(YRWS))
COMM  DISP VARS RWS

COMM PGR government price deflator
 IF YEAR LE 2018 ; DO
  SELECT INPUT 14 DB1
  GETA PGRA(?:01) 30700020,C(YEAR-1969)
  GETA GRA(?:01) 30700010,C(YEAR-1969)
  LET PGRA=MATP(((PGRA+.000001)/(GRA+.000001)),DMAT(EX))
  LET PGR=PGRA
 END
 
COMM 2015 onward from assumption files
 IF YEAR LE 2014 ; DO
  SELECT INPUT 14 DB1
   COMM Regional incomes and tax rates (RVTT target VAT not used in E3ME4, RRDM removed)
   GET RERS 99700027,C(YEAR-1969)
   GET REES 99700028,C(YEAR-1969)
   GET RMTX 99700093,C(YEAR-1969)
   GET RVAV 06700025,C(YEAR-1969)
   GET RSVT 06700095,C(YEAR-1969) 
   GET RGFR 99700022,C(YEAR-1969)
   GET RDTX 99700023,C(YEAR-1969)
   GET RITX 99700024,C(YEAR-1969)
   GET RBEN 99700025,C(YEAR-1969)
    COMM  Tax and benefit rates on these wages
   LET RBNR=RBEN/(RWS+.0001)
   LET REER=REES/(RWS+.0001)
   LET RRET=RERR
   LET RERR=RERS/(RWS+.0001)
   LET RITR=1+(RITX*EX/RSUM(TRAN(CR*PCR+.000001)))
   COMM Goverment final spending
   GETA GR(?:01) 30700010,C(YEAR-1969)
   LET RSG=CSUM(GR)
 END
 SELECT INPUT 12 DB1 
COMM Actuals (before rev rec)
 LET RDTA=RDTR
 LET RERA=RERR
 LET REEA=REER
 LET RBNA=RBNR
 LET GRA=GR   

COMM Residual income
 LET REES = REER * RWS
 LET RDTX = RDTR * RWS
 LET RBEN = RBNR * RWS
 LET RRIA=RGDI+RDTX+REES-RWS-RBEN
 LET RRI=RRIA
 IF YEAR EQ 2007 DISP VARS RRI,RDTX,REES,RWS,RBEN,RGDI,RERS
  
COMM Average wages
 LET YRWA=YRWS/(YREE+.0001)
 LET YRW=YRWA
  
COMM Profits = GVA - wages
COMM  LET YRP=YRVA-YRLC

COMM Actual and implicit GDP (RSS will form difference)
 GET RGDA 98030010,C(YEAR-2002)
 LET RGDP=RSC+RSG+RSK+RSX-RSM

 SELECT INPUT 11 DB1 
 GET RSS 99030012,C(YEAR-2010)
 GET RGFZ 88030092,C(YEAR-2010)

COMM Financial balance
 IF YEAR LE 2019; DO
  SELECT INPUT 14 DB1
  COMM assets
  GETA FA1(?:01) 61010101,C(YEAR-1994)
  GETA FA2(?:01) 61010102,C(YEAR-1994)
  GETA FA3(?:01) 61010103,C(YEAR-1994)
  GETA FA4(?:01) 61010104,C(YEAR-1994)
  GETA FA5(?:01) 61010105,C(YEAR-1994)
  LET FA1A = FA1
  LET FA2A = FA2
  LET FA3A = FA3
  LET FA4A = FA4
  LET FA5A = FA5
  COMM liabilities
  GETA FL1(?:01) 61020101,C(YEAR-1994)
  GETA FL2(?:01) 61020102,C(YEAR-1994)
  GETA FL3(?:01) 61020103,C(YEAR-1994)
  GETA FL4(?:01) 61020104,C(YEAR-1994)
  GETA FL5(?:01) 61020105,C(YEAR-1994)
  LET FL1A = FL1
  LET FL2A = FL2
  LET FL3A = FL3
  LET FL4A = FL4
  LET FL5A = FL5
  COMM actual data on currency holdings, budget deficit, liquidity ratio
  GET R4CD 20950001,C(YEAR-1994)
  GET R3CD 20950002,C(YEAR-1994)
  GET R1CD 20950003,C(YEAR-1994)
  GET R2LR 20950005,C(YEAR-1994)
 END IF
 
 SELECT INPUT 12 DB1

COMM Energy data
 GETA FR0(?:01) 44030000,C(YEAR-2002) 
 LET FR0=FR0+0.12
 LET FR0A = FR0

 GETA FR01(?:01) 44030001,C(YEAR-2002) 
 GETA FR02(?:01) 44030002,C(YEAR-2002) 
 GETA FR03(?:01) 44030003,C(YEAR-2002) 
 GETA FR04(?:01) 44030004,C(YEAR-2002) 
 GETA FR05(?:01) 44030005,C(YEAR-2002) 
 GETA FR06(?:01) 44030006,C(YEAR-2002) 
 GETA FR07(?:01) 44030007,C(YEAR-2002) 
 GETA FR08(?:01) 44030008,C(YEAR-2002) 
 GETA FR09(?:01) 44030009,C(YEAR-2002) 
 GETA FR10(?:01) 44030010,C(YEAR-2002) 
 GETA FR11(?:01) 44030011,C(YEAR-2002) 
 GETA FR12(?:01) 44030012,C(YEAR-2002)

 LET FR01 = FR01 +0.1
 LET FR02 = FR02 +0.1
 LET FR03 = FR03 +0.1
 LET FR04 = FR04 +0.1
 LET FR05 = FR05 +0.1
 LET FR06 = FR06 +0.1
 LET FR07 = FR07 +0.1
 LET FR08 = FR08 +0.1
 LET FR09 = FR09 +0.1
 LET FR10 = FR10 +0.1
 LET FR11 = FR11 +0.1
 LET FR12 = FR12 +0.1

 LET FRCT=FR01
 LET FROT=FR04
 LET FRGT=FR07
 LET FRET=FR08

COMM IEA energy prices with and without tax
 SELECT INPUT 13 DB1
 IF YEAR LT 2013; DO
  GETA EPR(?:01) 12700054,C(YEAR-1969) 
  GETA EPRT(?:01) 12700053,C(YEAR-1969) 
  COMM We store EPRT as the tax, not the price including tax
  LET EPRT=EPRT-EPR
  
  COMM Fuel price by users by fuel
  GETA PF01(?:01) 22700001,C(YEAR-1969) 
  GETA PF02(?:01) 22700002,C(YEAR-1969) 
  GETA PF03(?:01) 22700003,C(YEAR-1969) 
  GETA PF04(?:01) 22700004,C(YEAR-1969) 
  GETA PF05(?:01) 22700005,C(YEAR-1969) 
  GETA PF06(?:01) 22700006,C(YEAR-1969) 
  GETA PF07(?:01) 22700007,C(YEAR-1969) 
  GETA PF08(?:01) 22700008,C(YEAR-1969) 
  GETA PF09(?:01) 22700009,C(YEAR-1969) 
  GETA PF10(?:01) 22700010,C(YEAR-1969) 
  GETA PF11(?:01) 22700011,C(YEAR-1969) 
  GETA PF12(?:01) 22700012,C(YEAR-1969) 
  COMM Fuel tax by users by fuel
  GETA FT01(?:01) 32700001,C(YEAR-1969) 
  GETA FT02(?:01) 32700002,C(YEAR-1969) 
  GETA FT03(?:01) 32700003,C(YEAR-1969) 
  GETA FT04(?:01) 32700004,C(YEAR-1969) 
  GETA FT05(?:01) 32700005,C(YEAR-1969) 
  GETA FT06(?:01) 32700006,C(YEAR-1969) 
  GETA FT07(?:01) 32700007,C(YEAR-1969) 
  GETA FT08(?:01) 32700008,C(YEAR-1969) 
  GETA FT09(?:01) 32700009,C(YEAR-1969) 
  GETA FT10(?:01) 32700010,C(YEAR-1969) 
  GETA FT11(?:01) 32700011,C(YEAR-1969) 
  GETA FT12(?:01) 32700012,C(YEAR-1969) 
 END
 IF YEAR LE 2011; DO
 GET RMST 01732751,C(YEAR-1972)
 GET RDET 01732752,C(YEAR-1972)
 GET RULR 05732752,C(YEAR-1972)
 END
 COMM biofuels prices
 IF YEAR LT 2009; DO
  GET PBIO 12700051,C(YEAR-1969)
 END
 
  SELECT INPUT 19 DB1
  
COMM Health impacts module damage coefficients
  GET DPM1 91110023,C(YEAR-2004) 
  GET DPM2 91120023,C(YEAR-2004)
  GET DPM3 91130023,C(YEAR-2004)
  GET DNX1 91210023,C(YEAR-2004) 
  GET DNX2 91220023,C(YEAR-2004)
  GET DNX3 91230023,C(YEAR-2004)
  GET DSO1 91310023,C(YEAR-2004) 
  GET DSO2 91320023,C(YEAR-2004)
  GET DSO3 91330023,C(YEAR-2004)
  GET D251 91410023,C(YEAR-2004) 
  GET D252 91420023,C(YEAR-2004)
  GET D253 91430023,C(YEAR-2004)

 COMM FTT Variables
 IF YEAR LE 2018;  DO
  GETA MEWG(?:01) 31010000,C(YEAR-1989)
  GETA MEWE(?:01) 31020000,C(YEAR-1989)
  IF YEAR LE 2013;  DO
   COMM 2008 actual capacity factors
   GETA MWLO(?:01) 31030000,C(YEAR-2000)
   COMM 2008 gamma values
   GETA MGAM(?:01) 31200000,C(YEAR-2000)
   COMM 2008 starting cumulative capacities for learning
   GET MEWW 31040000
  END
 END
 COMM FTT calibration
 GETA MGAM(?:01) 31200000,C(YEAR-2000)
COMM IF YEAR GT 2019 LET MGAM(7,0) = MGAM(7,0)+1
 IF YEAR GT 2019 LET MGAM(17,0) = MGAM(17,0)+10
 IF YEAR GT 2019 LET MGAM(19,0) = MGAM(19,0)+10
COMM IF YEAR GT 2019 LET MGAM(20,0) = MGAM(20,0)+5 +(1*YEAR-2019)
 
 COMM FTT exogenous capacity if any
 GETA MWKA(?:01) 31120000,C(YEAR-2000)
 COMM FTT technology subsidies
 GETA MEWT(?:01) 31100000,C(YEAR-2000)
 COMM FTT feed-in tariffs
 GETA MEFI(?:01) 31110000,C(YEAR-2000)
 COMM FTT Production to Reserve ratio by region 
 IF YEAR GT 2002 GETA MPTR(?:01) 31050000,C(YEAR-2002)
 IF YEAR LT 2018 GETA RERY(?:01) 31210000,C(YEAR-1977)
 COMM FTT regulations
 GETA MEWR(?:01) 31090000,C(YEAR-2000)

 COMM Add in Nuclear phase out in Germany 2022
 IF YEAR EQ 2021 LET MWKA(1,3) = 5.0
 IF YEAR EQ 2022 LET MWKA(1,3) = 0.0
 COMM BE nuclear phse out in 2025
 IF YEAR EQ 2021 LET MWKA(1,1) = 4.0
 IF YEAR EQ 2022 LET MWKA(1,1) = 3.0
 IF YEAR EQ 2023 LET MWKA(1,1) = 2.0
 IF YEAR EQ 2024 LET MWKA(1,1) = 1.0
 IF YEAR EQ 2025 LET MWKA(1,1) = 0.0
 COMM regulate offshore wind  (and some onshore)
 IF YEAR GT 2020 LET MEWR(18,3) = 40.0
 IF YEAR GT 2020 LET MEWR(18,1) = 2.0
 IF YEAR GT 2020 LET MEWR(18,5) = 40.0
 IF YEAR GT 2020 LET MEWR(18,8) = 40.0
 IF YEAR GT 2020 LET MEWR(18,10) = 30.0
 IF YEAR GT 2020 LET MEWR(18,15) = 55.00
 IF YEAR GT 2020 LET MEWR(17,34) = 400.0
 IF YEAR GT 2020 LET MEWR(17,36) = 90.0
 IF YEAR GT 2020 LET MEWR(17,37) = 80.0
 IF YEAR GT 2020 LET MEWR(17,44) = 100.0
 COMM biogas
 IF YEAR GT 2020 LET MEWR(13,51) = 4.0
 COMM geothermal
 IF YEAR GT 2020 LET MEWR(21,51) = 2.0 
 
COMM_____FTT:Transport data
 GET RVEH 32090000,C(YEAR-1989)
 GET TDA1 32300000
 GET TDA2 32310000
 GET RVKM 32330000,C(YEAR-2000)
 GET RFLT 32320000,C(YEAR-2000)
 GET RTKM 32100000,C(YEAR-1976)
 GET RFVH 32110000,C(YEAR-1976)
 GET RFFL 32120000,C(YEAR-1976)
 IF DATE LE 2013; DO
  GET RPVE 32240000,C(YEAR-1969)
 END IF
 LET RVHA = RVEH
 LET RVKA = RVKM
 COMM Tech to fuel matrix
 GET TJET 32230000
 IF YEAR EQ 2012; DO
   COMM Cumulative capacities for learning
   GET TEWW 32180000
   COMM History of sales, efficiency and survival functions
   GET TESF 32190000
   GET TSFD 32200000
   GET TESH 32210000
   GET TETH 32220000
   LET TSHL = TESH
   LET TTHL = TETH
 END IF
 IF YEAR LT 2017  LET RFLA = RFLT
 IF YEAR LT 2017; DO
   GETA TEWS(?:01) 32060000,C(YEAR-1989)
 END IF
 IF YEAR GT 2011; DO
   COMM Exogenous policies
   GET RTCO 32130000,C(YEAR-2000)
   GET RBFM 32150000,C(YEAR-2000)
   GET RTFT 32140000,C(YEAR-2000)
   GETA TTVT(?:01) 32020000,C(YEAR-2000)
   GETA TTRT(?:01) 32030000,C(YEAR-2000)
   GETA TREG(?:01) 32040000,C(YEAR-2000)
   COMM Exogenous capacities if any
   GETA TWSA(?:01) 32050000,C(YEAR-2000)
 END IF

 COMM_____FTT:Heating data
 IF YEAR EQ 2014; DO
  GET HJET 33130000
  GET HJFC 33180000  
  GET HEWA 33020000
  GET HEWB 33030000
  GET HEWW 33050000
  GETA HFIN(?:01) 33120000,C(YEAR-2000) 
  GETA HFFC(?:01) 33140000,C(YEAR-2000)
  COMM previously switches were stored for the year 2014
  COMM Now they are set explicitly here
  LET HFFC = HFFC * 0
 END IF
 IF YEAR LT 2015;  DO
  GETA HEWF(?:01) 33040000,C(YEAR-1989) 
 END IF
 IF YEAR GT 2014; DO
  GET RHUD 33170000,C(YEAR-2000)
  GETA HTVS(?:01) 33060000,C(YEAR-2000) 
  GETA HTRT(?:01) 33070000,C(YEAR-2000) 
  GETA HREG(?:01) 33080000,C(YEAR-2000) 
  GETA HWSA(?:01) 33090000,C(YEAR-2000) 
  GETA HEFI(?:01) 33100000,C(YEAR-2000) 
  GETA HETR(?:01) 33110000,C(YEAR-2000) 
  GETA HFIN(?:01) 33120000,C(YEAR-2000) 
  GETA HFFC(?:01) 33140000,C(YEAR-2000)
  COMM GETA HWIB(?:01) 33190000,C(YEAR-2000) 
 END IF
 COMM_____FTT:Steel data
 IF YEAR LT 2018; DO
  GETA SEWG(?:01) 34240000,C(YEAR-1989)
  GET SPSP 34230000,C(YEAR-1989)
  GET SHS1 34290000
 END IF
 IF YEAR EQ 2017; DO
 COMM switches are to be added here
  GET SEWA 34020000
  GET SEWB 34030000
  GET SWAP 34320000  
  GET STIM 34040000
  GET SPMA 34050000
 END IF
 IF YEAR GT 2017; DO
  GETA SMPT(?:01) 34150000,C(YEAR-2000)
  GETA SKST(?:01) 34160000,C(YEAR-2000)
  GETA SWKA(?:01) 34170000,C(YEAR-2000)
  GETA SEWT(?:01) 34180000,C(YEAR-2000)
  GETA SEWR(?:01) 34190000,C(YEAR-2000)
  GETA SRDI(?:01) 34200000,C(YEAR-2000)
  GETA SEEI(?:01) 34210000,C(YEAR-2000)  
  GETA STRT(?:01) 34220000,C(YEAR-2000)
  COMM GET SXSS 34110000
  COMM GET SDIS 34250000,C(YEAR-2017)
  COMM GETA SCFA(?:01) 34260000,C(YEAR-2017)
  COMM GET SPSA 34270000,C(YEAR-2017)
  COMM GET SXSC 34280000,C(YEAR-2017)
 END IF  
 
 SELECT INPUT 11 DB1
 COMM baseline investment HWIY 
 IF YEAR GT 2014; DO
  GETA HWIB(?:01) 82030015,C(YEAR-2010) 
 END IF
 
 SELECT INPUT 12 DB1
COMM actual fuel use for generation - added by OL 13/04-07 
 LET JREA(01,0)=FR01(01,0); LET JREA(02,0)=FR02(01,0)
 LET JREA(03,0)=FR03(01,0); LET JREA(04,0)=FR04(01,0)
 LET JREA(05,0)=FR05(01,0); LET JREA(06,0)=FR06(01,0)
 LET JREA(07,0)=FR07(01,0); LET JREA(08,0)=FR08(01,0)
 LET JREA(09,0)=FR09(01,0); LET JREA(10,0)=FR10(01,0)
 LET JREA(11,0)=FR11(01,0); LET JREA(12,0)=FR12(01,0)
 LET JREF=JREA
 COMM FTT Actual fuel use taken from FR variables
 LET MJEF=JREA
 LET MJCO=JREA

COMM New section added by HP 24/07/06 - set calib FRJT to off and calculate the
COMM fuel shares with the data on EF00, ie match calibrated forecast
 LET FSMD = FR05 / (FR0+0.0000001) 
 LET FSCW = FR10 / (FR0+0.0000001)  
 LET FSBF = FR11 / (FR0+0.0000001)  
 LET FSHY = FR12 / (FR0+0.0000001)  

 LET FSOC = FR02 / (FR01+0.0000001)  
 LET FSCO = FR03 / (FR04+0.0000001)  
 LET FSOG = FR06 / (FR07+0.0000001)  
 LET FSHE = FR09 / (FR08+0.0000001)  

COMM ---------------------------------------------------------------------------------------------
  COMM Materials data
COMM ---------------------------------------------------------------------------------------------
 SELECT INPUT 12 DB1
 GETA MU01(?:01) 01030058,C(YEAR-2002) 
 GETA MU02(?:01) 02030058,C(YEAR-2002) 
 GETA MU03(?:01) 03030058,C(YEAR-2002) 
 GETA MU04(?:01) 04030058,C(YEAR-2002) 
 GETA MU05(?:01) 05030058,C(YEAR-2002) 
 GETA MU06(?:01) 06030058,C(YEAR-2002) 
 GETA MU07(?:01) 07030058,C(YEAR-2002) 

 LET MU1A = MU01
 LET MU2A = MU02
 LET MU3A = MU03
 LET MU4A = MU04
 LET MU5A = MU05
 LET MU6A = MU06
 LET MU7A = MU07

 GETA MUI1(?:01) 01030068,C(YEAR-2002)
 GETA MUI2(?:01) 02030068,C(YEAR-2002)
 GETA MUI3(?:01) 03030068,C(YEAR-2002)
 GETA MUI4(?:01) 04030068,C(YEAR-2002)
 GETA MUI5(?:01) 05030068,C(YEAR-2002)
 GETA MUI6(?:01) 06030068,C(YEAR-2002)
 GETA MUI7(?:01) 07030068,C(YEAR-2002)
 
  LET MI1A = MUI1
  LET MI2A = MUI2
  LET MI3A = MUI3
  LET MI4A = MUI4
  LET MI5A = MUI5
  LET MI6A = MUI6
  LET MI7A = MUI7

COMM ---------------------------------------------------------------------------------------------
  COMM Food types 
COMM ---------------------------------------------------------------------------------------------
  GETA FRFD(?:01) 11030158,C(YEAR-2002) 
  GETA PRFD(?:01) 12030158,C(YEAR-2002) 

  GET RFD 11030058,C(YEAR-2002) 
  GET RPFD 12030058,C(YEAR-2002)

  LET FRFA = FRFD
  LET RFDA = RFD

COMM ---------------------------------------------------------------------------------------------
COMM Waste Variables (only European data available for now...)
COMM ---------------------------------------------------------------------------------------------

 SELECT INPUT 20 DB1
 
 IF YEAR LT 2010; DO
   IF YEAR GT 2003; DO
COMM Waste Variables (only European data available for now...)

    GETA WG01(?:01) 9040001,C(YEAR-2003) 
    GETA WG02(?:01) 9040002,C(YEAR-2003)
    GETA WG03(?:01) 9040003,C(YEAR-2003)
    GETA WG04(?:01) 9040004,C(YEAR-2003)
    GETA WG05(?:01) 9040005,C(YEAR-2003)
    GETA WG06(?:01) 9040006,C(YEAR-2003)
    GETA WG07(?:01) 9040007,C(YEAR-2003)
    GETA WG08(?:01) 9040008,C(YEAR-2003)
    GETA WG09(?:01) 9040009,C(YEAR-2003)
    GETA WG10(?:01) 9040010,C(YEAR-2003)

    GETA WD01(?:01) 8040001,C(YEAR-2003) 
    GETA WD02(?:01) 8040002,C(YEAR-2003)
    GETA WD03(?:01) 8040003,C(YEAR-2003)
    GETA WD04(?:01) 8040004,C(YEAR-2003)
    GETA WD05(?:01) 8040005,C(YEAR-2003)
    GETA WD06(?:01) 8040006,C(YEAR-2003)
    GETA WD07(?:01) 8040007,C(YEAR-2003)
    GETA WD08(?:01) 8040008,C(YEAR-2003)
    GETA WD09(?:01) 8040009,C(YEAR-2003)
    GETA WD10(?:01) 8040010,C(YEAR-2003)
   END
  END  

 SELECT INPUT 20 DB1
 IF YEAR LT 2010; DO
COMM Prices
  GETA PMTR(?:01) 01700038,C(YEAR-1969) 

COMM DE
  GETA MUD1(?:01) 01700055,C(YEAR-1969) 
  GETA MUD2(?:01) 02700055,C(YEAR-1969) 
  GETA MUD3(?:01) 03700055,C(YEAR-1969)
  GETA MUD4(?:01) 04700055,C(YEAR-1969) 
  GETA MUD5(?:01) 05700055,C(YEAR-1969) 
  GETA MUD6(?:01) 06700055,C(YEAR-1969)
  GETA MUD7(?:01) 07700055,C(YEAR-1969)

COMM Imports                                                                   
  GETA MUM1(?:01) 01700056,C(YEAR-1969)
  GETA MUM2(?:01) 02700056,C(YEAR-1969) 
  GETA MUM3(?:01) 03700056,C(YEAR-1969) 
  GETA MUM4(?:01) 04700056,C(YEAR-1969) 
  GETA MUM5(?:01) 05700056,C(YEAR-1969)
  GETA MUM6(?:01) 06700056,C(YEAR-1969)
  GETA MUM7(?:01) 07700056,C(YEAR-1969)

COMM Export
  GETA MUX1(?:01) 01700057,C(YEAR-1969) 
  GETA MUX2(?:01) 02700057,C(YEAR-1969) 
  GETA MUX3(?:01) 03700057,C(YEAR-1969) 
  GETA MUX4(?:01) 04700057,C(YEAR-1969) 
  GETA MUX5(?:01) 05700057,C(YEAR-1969) 
  GETA MUX6(?:01) 06700057,C(YEAR-1969) 
  GETA MUX7(?:01) 07700057,C(YEAR-1969) 
                    
COMM Domestic Material Consumption = DMI - MUX
  LET MDC1 = MU01 - MUX1
  LET MDC2 = MU02 - MUX2
  LET MDC3 = MU03 - MUX3
  LET MDC4 = MU04 - MUX4
  LET MDC5 = MU05 - MUX5
  LET MDC6 = MU06 - MUX6
  LET MDC7 = MU07 - MUX7

COMM DMI Fuel
  GETA MFR(?:01) 01700063,C(YEAR-1969) 
COMM DE Fuel                                                                   
  GETA MFRD(?:01) 01700060,C(YEAR-1969) 
COMM Imported Fuel                                                                   
  GETA MFRM(?:01) 01700061,C(YEAR-1969) 
COMM Exports of fuels                                                                  
  GETA MFRX(?:01) 01700062,C(YEAR-1969)
COMM unallcated
  GET RMT9 1700173,C(YEAR-1969)
  GET RM9X 1700172,C(YEAR-1969)  
 END
 IF YEAR GE 2010; DO
  LET RMT9 = RMT9*1.005
  LET RM9X = RM9X*1.005
 END IF
 COMM GET EU RMC cofficients - import and export
 IF YEAR LT 2012; DO
   GET XRME 2000060,C(YEAR-1999) 
   GET MRME 3000060,C(YEAR-1999) 
   GET XFRE 2100060,C(YEAR-1999) 
   GET MFRE 3100060,C(YEAR-1999) 
 END IF 
 
 COMM Actuals for baseline emissions
 SELECT INPUT 12 DB1
 GET RSOA 16324962,C(YEAR-2002) 
 GET RNOA 26324962,C(YEAR-2002) 
 GET RBSA 36324962,C(YEAR-2002)
 GET RP2A 46324962,C(YEAR-2002)

 
COMM ---------------------------------------------------------------------------------------------
COMM Read in residuals
COMM ---------------------------------------------------------------------------------------------
SELECT INPUT 11 DB1
COMM Regional macro-variables
 GET RSCR 71030091,C(YEAR-2010)
 GET RRIR 73030081,C(YEAR-2010)
 GET RDWR 80030091,C(YEAR-2010)
 GET RURR 82030091,C(YEAR-2010)
COMM IF YEAR GE 2010 LET RURR(14) = RURR(14) + 0.01
COMM IF YEAR GE 2010 LET RURR(42) = RURR(42) + 0.02
COMM FOR JJ = 1 TO 59
COMM  IF YEAR GE 2010 LET RURR(JJ) = RURR(JJ) + 0.02
COMM LOOP JJ
 GET RERB 83030091,C(YEAR-2010)
 GET RETB 84030091,C(YEAR-2010)
 GET RVAB 85030091,C(YEAR-2010)
 GET RDTB 86030091,C(YEAR-2010)
 GET REEB 87030091,C(YEAR-2010)
 GET RGFB 88030091,C(YEAR-2010)
 GET RGIR 91030055,C(YEAR-2010)
 GET RLRR 98030064,C(YEAR-2010)
 GET EXR 98030060,C(YEAR-2010)
 GET RVHR 93330060,C(YEAR-2010)
 GET RVKR 93340060,C(YEAR-2010)
 GET PMFR 98100060,C(YEAR-2010)

 GETA FR0R(?:01) 75030091,C(YEAR-2010)
 GETA FRCR(?:01) 76030091,C(YEAR-2010) 
 GETA FROR(?:01) 77030091,C(YEAR-2010) 
 GETA FRGR(?:01) 78030091,C(YEAR-2010)
 GETA FRER(?:01) 79030091,C(YEAR-2010) 
 GETA FRBR(?:01) 73030091,C(YEAR-2010)
 
 GETA FCOR(?:01) 01030091,C(YEAR-2010) 
 GETA FCPC(?:01) 01030092,C(YEAR-2010) 
 
 GETA QRR(?:01) 15030091,C(YEAR-2010)

 COMM Fix for QRR Pakistan
 
 IF YEAR GE 2021 LET QRR(16,71) = -5882
 IF YEAR GE 2021 LET QRR(17,71) = -2065
 IF YEAR GE 2021 LET QRR(18,71) = -1005
 IF YEAR GE 2021 LET QRR(19,71) = -3641
 
 GETA QRDR(?:01) 15030092,C(YEAR-2010) 
 GETA YRER(?:01) 62030091,C(YEAR-2010)
 GETA YREW(?:01) 62030092,C(YEAR-2010) 
 GETA QEXR(?:01) 85030091,C(YEAR-2010)
 GETA QEMR(?:01) 83030091,C(YEAR-2010)
 GETA PEXR(?:01) 66030091,C(YEAR-2010) 
 GETA PEMR(?:01) 60030091,C(YEAR-2010)
 GETA YEMR(?:01) 22030014,C(YEAR-2010)
 COMM Fix for UK PQRD for coal by adjusting residuals for PEMR UC 06/10/08
 IF YEAR GE 2020 LET PEMR(2,15) = PEMR(2,15) *0.996
 GETA PIXR(?:01) 66030092,C(YEAR-2010) 
 GETA PIMR(?:01) 60030092,C(YEAR-2010) 
 COMM Fix for UK PQRD for coal by adjusting residuals for PIMR UC 06/10/08
 IF YEAR GE 2020 LET PIMR(2,15) = PIMR(2,15) *0.996
 GETA PYHR(?:01) 61030091,C(YEAR-2010)
 
 COMM External wages for YRW equations
 GETA LYXA(?:01) 94030091,C(YEAR-2010)  
 GETA LYWA(?:01) 95030091,C(YEAR-2010) 
 GETA YRWR(?:01) 69030091,C(YEAR-2010)
 GETA YRHR(?:01) 68030091,C(YEAR-2010)

 GETA CRR(?:01) 72030091,C(YEAR-2010)
 GETA CRWT(?:01) 72030092,C(YEAR-2010) 
 GETA KRR(?:01) 63030091,C(YEAR-2010) 
 
 GETA PYFR(?:01) 13030091,C(YEAR-2010) 
 GETA PYMR(?:01) 18030091,C(YEAR-2010)
 GETA YTRR(?:01) 55030091,C(YEAR-2010) 
 
 GETA LRPR(?:01) 70030091,C(YEAR-2010) 
 
 GETA PYRR(?:01) 25030091,C(YEAR-2010)
 GETA YRFR(?:01) 16030091,C(YEAR-2010) 
 GETA YRMR(?:01) 17030091,C(YEAR-2010)
 
 GET COSR(?:01) 45030162,C(YEAR-2010) COSR(?:02) 45030262,C(YEAR-2010)
 GET COSR(?:03) 45030362,C(YEAR-2010) COSR(?:04) 45030462,C(YEAR-2010)
 GET COSR(?:05) 45030562,C(YEAR-2010) COSR(?:06) 45030662,C(YEAR-2010)
 GET COSR(?:07) 45030762,C(YEAR-2010) COSR(?:08) 45030862,C(YEAR-2010)
 GET COSR(?:09) 45030962,C(YEAR-2010) COSR(?:10) 45031062,C(YEAR-2010)
 GET COSR(?:11) 45031162,C(YEAR-2010) COSR(?:12) 45031262,C(YEAR-2010)
 GET COSR(?:13) 45031362,C(YEAR-2010) COSR(?:14) 45031462,C(YEAR-2010)
 GET COSR(?:15) 45031562,C(YEAR-2010) COSR(?:16) 45031662,C(YEAR-2010)
 GET COSR(?:17) 45031762,C(YEAR-2010) COSR(?:18) 45031862,C(YEAR-2010)
 GET COSR(?:19) 45031962,C(YEAR-2010) COSR(?:20) 45032062,C(YEAR-2010)
 GET COSR(?:21) 45032162,C(YEAR-2010) COSR(?:22) 45032262,C(YEAR-2010)
 GET COSR(?:23) 45032362,C(YEAR-2010)
 
 GETA QEMD(?:01) 81030092,C(YEAR-2010) 
 GETA QIMD(?:01) 81030093,C(YEAR-2010)
 GETA QIXR(?:01) 82030091,C(YEAR-2010) 
 GETA QIMR(?:01) 81030091,C(YEAR-2010) 
 
 GET RVRR 90030091,C(YEAR-2010)
 
 GETA PQZR(?:01) 90030091,C(YEAR-2010) 
 
COMM GETA F1CC(?:01) 42030091,C(YEAR-2010) 
COMM GETA F1KC(?:01) 43030091,C(YEAR-2010) 
COMM GETA F1UC(?:01) 44030091,C(YEAR-2010) 
COMM GETA F1OC(?:01) 45030091,C(YEAR-2010) 
COMM GETA F1MC(?:01) 46030091,C(YEAR-2010) 
COMM GETA F1GC(?:01) 47030091,C(YEAR-2010)
COMM GETA F1DC(?:01) 48030091,C(YEAR-2010) 
COMM GETA F1WC(?:01) 49030091,C(YEAR-2010)

 COMM non-CO2 and non-energy CO2 emissions
 GETA EC2R(?:01) 81030001,C(YEAR-2010) 
 GETA ESOR(?:01) 81030002,C(YEAR-2010) 
 GETA ENOR(?:01) 81030003,C(YEAR-2010) 
 GETA ECOR(?:01) 81030004,C(YEAR-2010) 
 GETA ECHR(?:01) 81030005,C(YEAR-2010) 
 GETA EBSR(?:01) 81030006,C(YEAR-2010)
 GETA EVOR(?:01) 81030007,C(YEAR-2010) 
 GETA EP2R(?:01) 81030008,C(YEAR-2010)
 GETA EN2R(?:01) 81030011,C(YEAR-2010)
 GETA EHFR(?:01) 81030012,C(YEAR-2010)
 GETA EPFR(?:01) 81030013,C(YEAR-2010)
 GETA ESFR(?:01) 81030014,C(YEAR-2010)

 COMM Materials 
 GETA MI1R(?:01) 14030091,C(YEAR-2010)  
 GETA MI2R(?:01) 24030091,C(YEAR-2010)
 GETA MI3R(?:01) 34030091,C(YEAR-2010)
 GETA MI4R(?:01)  4030091,C(YEAR-2010)
 GETA MI5R(?:01) 54030091,C(YEAR-2010)
 GETA MI6R(?:01) 64030091,C(YEAR-2010)
 GETA MI7R(?:01)  7030091,C(YEAR-2010)
 
 COMM Food types
 GET RFDR 61030015,C(YEAR-2010)
 GETA FRFR(?:01) 61030115,C(YEAR-2010)

 COMM Financial balance
 GETA FA1R(?:01) 57030101,C(YEAR-2010)  
 GETA FA2R(?:01) 57030102,C(YEAR-2010)  
 GETA FA3R(?:01) 57030103,C(YEAR-2010)  
 GETA FA4R(?:01) 57030104,C(YEAR-2010)  
 GETA FA5R(?:01) 57030105,C(YEAR-2010)  
 GETA FL1R(?:01) 58030101,C(YEAR-2010)  
 GETA FL2R(?:01) 58030102,C(YEAR-2010)  
 GETA FL3R(?:01) 58030103,C(YEAR-2010)  
 GETA FL4R(?:01) 58030104,C(YEAR-2010)  
 GETA FL5R(?:01) 58030105,C(YEAR-2010)  
COMM End of residuals COMM -------------------------------------------------------------------------

COMM -------------------------------------------------------------------------
IF YEAR GE 2021 LE 2050; DO
   FOR JJ =1 TO 71
     LET RTFT(JJ) = 18
   LOOP JJ
END IF
IF YEAR GE 2021; DO
  FOR JJ=1 TO 31
     LET RBFM(JJ) = 0.0757 + 0.014143*(YEAR-2020)
  LOOP JJ
END IF

IF YEAR GE 2021; DO
  FOR LL=51 TO 71
     LET RBFM(LL) = 0.016667*(YEAR-2020)
  LOOP LL
END IF

IF YEAR GE 2021; DO
  LET RBFM(32) = 0.016667*(YEAR-2020)
  LET RBFM(33) = 0.016667*(YEAR-2020)
  LET RBFM(34) = 0.0843+0.013857*(YEAR-2020)
  LET RBFM(35) = 0.016667*(YEAR-2020)
  LET RBFM(36) = 0.0757 + 0.014143*(YEAR-2020)
  LET RBFM(37) = 0.016667*(YEAR-2020)
  LET RBFM(38) = 0.016667*(YEAR-2020)
  LET RBFM(39) = 0.016667*(YEAR-2020)
  LET RBFM(40) = 0.016667*(YEAR-2020)
  LET RBFM(41) = 0.0214 + 0.015953*(YEAR-2020)
  LET RBFM(42) = 0.0143 + 0.01619*(YEAR-2020)
  LET RBFM(43) = 0.09+0.013857*(YEAR-2020)
  LET RBFM(44) = 0.2129+0.00957*(YEAR-2020)
  LET RBFM(45) = 0.1271+0.01243*(YEAR-2020)
  LET RBFM(46) = 0.1271+0.01243*(YEAR-2020)
  LET RBFM(47) = 0.1271+0.01243*(YEAR-2020)
  LET RBFM(48) = 0.0214 + 0.015953*(YEAR-2020)
  LET RBFM(49) = 0.0214 + 0.015953*(YEAR-2020)
  LET RBFM(50) = 0.0214 + 0.015953*(YEAR-2020)
END IF
 IF YEAR GE 2021 LE 2050; DO
   FOR LL =1 TO 27
     LET TTVT(19,LL) = -7000
     LET TTVT(20,LL) = -7000
     LET TTVT(21,LL) = -7000 
   LOOP LL
 END IF
 IF YEAR GE 2021 LE 2050; DO
   FOR LL =28 TO 71   
     LET TTVT(19,LL) = -8860
     LET TTVT(20,LL) = -13120
     LET TTVT(21,LL) = -13120   
   LOOP LL 
 END IF
 IF YEAR GE 2021 LE 2050; DO
   FOR LL = 1 TO 71
     LET TTRT(1,LL) = 300
     LET TTRT(2,LL) = 400
     LET TTRT(3,LL) = 500
     LET TTRT(4,LL) = 300
     LET TTRT(5,LL) = 400
     LET TTRT(6,LL) = 500
     LET TTRT(7,LL) = 300
     LET TTRT(8,LL) = 400
     LET TTRT(9,LL) = 500
     LET TTRT(10,LL) = 300
     LET TTRT(11,LL) = 400
     LET TTRT(12,LL) = 500
     LET TTRT(13,LL) = 300
     LET TTRT(14,LL) = 400
     LET TTRT(15,LL) = 500
   LOOP LL
 END IF
IF YEAR GE 2021; DO
  FOR JJ=1 TO 71
    LET TREG(1,JJ)=0
    LET TREG(2,JJ)=0
    LET TREG(3,JJ)=0
    LET TREG(7,JJ)=0
    LET TREG(8,JJ)=0
    LET TREG(9,JJ)=0
  LOOP JJ
END IF

IF YEAR GE 2041; DO
  FOR JJ=1 TO 71
    LET TREG(4,JJ)=0
    LET TREG(5,JJ)=0
    LET TREG(6,JJ)=0
    LET TREG(10,JJ)=0
    LET TREG(11,JJ)=0
    LET TREG(12,JJ)=0
  LOOP JJ
END IF

IF YEAR GE 2020 LE 2021; DO
LET TWSA(4,1)=5.77355
LET TWSA(4,2)=2.26965
LET TWSA(4,3)=4.5458
LET TWSA(4,4)=0.71975
LET TWSA(4,5)=25.14095
LET TWSA(4,6)=31.56045
LET TWSA(4,7)=1.8224
LET TWSA(4,8)=43.01725
LET TWSA(4,9)=0.3641
LET TWSA(4,10)=8.64945
LET TWSA(4,11)=5.0188
LET TWSA(4,12)=4.67085
LET TWSA(4,13)=3.60425
LET TWSA(4,14)=0.4459
LET TWSA(4,15)=2.77075
LET TWSA(4,16)=0.54435
LET TWSA(4,17)=0.0541
LET TWSA(4,18)=0.05165
LET TWSA(4,19)=0.05495
LET TWSA(4,20)=0.14485
LET TWSA(4,21)=0.2912
LET TWSA(4,22)=0.002
LET TWSA(4,23)=1.94905
LET TWSA(4,24)=1.0764
LET TWSA(4,25)=1.8614
LET TWSA(4,26)=2.70365
LET TWSA(4,27)=4.3004
LET TWSA(4,28)=0.26985
LET TWSA(4,29)=0.4857
LET TWSA(4,30)=0.2156
LET TWSA(4,31)=1.59375
LET TWSA(4,32)=13.8521
LET TWSA(4,33)=0.0007
LET TWSA(4,34)=15.7191
LET TWSA(4,35)=28.48735
LET TWSA(4,36)=1.976
LET TWSA(4,37)=1.61915
LET TWSA(4,38)=0.3264
LET TWSA(4,39)=5.85765
LET TWSA(4,40)=0
LET TWSA(4,41)=12.80245
LET TWSA(4,42)=379.9914
LET TWSA(4,43)=0
LET TWSA(4,44)=3.01215
LET TWSA(4,45)=0
LET TWSA(4,46)=0
LET TWSA(4,47)=0
LET TWSA(4,48)=0.76765
LET TWSA(4,49)=0.6559
LET TWSA(4,50)=3.7246
END IF

IF YEAR GE 2021 LE 2025; DO
LET TWSA(19,4)=2.5319
LET TWSA(19,7)=2.3108
LET TWSA(19,12)=5.9514
LET TWSA(19,13)=4.5473
LET TWSA(19,14)=1.6621
LET TWSA(19,16)=2.05305
LET TWSA(19,17)=0.20875
LET TWSA(19,18)=0.1859
LET TWSA(19,19)=0.2111
LET TWSA(19,20)=0.5701
LET TWSA(19,21)=1.08515
LET TWSA(19,22)=0.00665
LET TWSA(19,23)=7.3378
LET TWSA(19,24)=1.37055
LET TWSA(19,25)=2.37695
LET TWSA(19,26)=3.44435
LET TWSA(19,27)=5.4452
LET TWSA(19,28)=0.99945
LET TWSA(19,29)=1.7964
LET TWSA(19,30)=0.272
LET TWSA(19,31)=2.0208
LET TWSA(19,32)=17.1668
LET TWSA(19,33)=0.0025
LET TWSA(19,36)=6.32
LET TWSA(19,37)=5.12855
LET TWSA(19,38)=1.0749
LET TWSA(19,39)=17.06385
LET TWSA(19,40)=2.3601
LET TWSA(19,41)=764.60395
LET TWSA(19,43)=7.35345
LET TWSA(19,45)=0.7008
LET TWSA(19,46)=1.8798
LET TWSA(19,47)=1.7679
LET TWSA(19,48)=5.4127
LET TWSA(19,49)=4.6273
LET TWSA(19,50)=25.62685
LET TWSA(20,4)=1.81215
LET TWSA(20,12)=1.28055
LET TWSA(20,13)=0.94305
LET TWSA(20,14)=1.2162
LET TWSA(20,16)=1.5087
LET TWSA(20,17)=0.15465
LET TWSA(20,18)=0.13425
LET TWSA(20,19)=0.15615
LET TWSA(20,20)=0.42525
LET TWSA(20,21)=0.79395
LET TWSA(20,22)=0.00465
LET TWSA(20,23)=5.38875
LET TWSA(20,24)=0.29415
LET TWSA(20,25)=0.51555
LET TWSA(20,26)=0.7407
LET TWSA(20,27)=1.1448
LET TWSA(20,29)=1.3107
LET TWSA(20,30)=0.0564
LET TWSA(20,31)=0.42705
LET TWSA(20,32)=3.3147
LET TWSA(20,33)=0.0018
LET TWSA(20,36)=4.344
LET TWSA(20,37)=3.5094
LET TWSA(20,38)=0.7485
LET TWSA(20,39)=11.2062
LET TWSA(20,40)=2.3601
LET TWSA(20,41)=476.1465
LET TWSA(20,43)=7.35345
LET TWSA(20,45)=0.7008
LET TWSA(20,46)=1.8798
LET TWSA(20,47)=1.7679
LET TWSA(20,48)=4.64505
LET TWSA(20,49)=3.9714
LET TWSA(20,50)=21.90225
LET TWSA(21,4)=1.81215
LET TWSA(21,12)=1.28055
LET TWSA(21,13)=0.94305
LET TWSA(21,14)=1.2162
LET TWSA(21,16)=1.5087
LET TWSA(21,17)=0.15465
LET TWSA(21,18)=0.13425
LET TWSA(21,19)=0.15615
LET TWSA(21,20)=0.42525
LET TWSA(21,21)=0.79395
LET TWSA(21,22)=0.00465
LET TWSA(21,23)=5.38875
LET TWSA(21,24)=0.29415
LET TWSA(21,25)=0.51555
LET TWSA(21,26)=0.7407
LET TWSA(21,27)=1.1448
LET TWSA(21,28)=0.7296
LET TWSA(21,29)=1.3107
LET TWSA(21,30)=0.0564
LET TWSA(21,31)=0.42705
LET TWSA(21,32)=3.3147
LET TWSA(21,33)=0.0018
LET TWSA(21,36)=4.344
LET TWSA(21,38)=0.7485
LET TWSA(21,39)=11.2062
LET TWSA(21,40)=2.3601
LET TWSA(21,41)=41.448
LET TWSA(21,43)=7.35345
LET TWSA(21,45)=0.7008
LET TWSA(21,46)=1.8798
LET TWSA(21,47)=1.7679
LET TWSA(21,48)=4.64505
LET TWSA(21,50)=21.90225
END IF


 IF YEAR GE 2021; DO
   FOR LL =1 TO 71
     LET FETS(15,LL) = 0
     LET FETS(16,LL) = 0
     LET FETS(17,LL) = 0
     LET FETS(18,LL) = 0
     LET FETS(19,LL) = 0
     LET FETS(1, LL) = 1
     LET FETS(2, LL) = 1
     LET FETS(3, LL) = 1
     LET FETS(4, LL) = 1
     LET FETS(5, LL) = 1
     LET FETS(6, LL) = 1
     LET FETS(7, LL) = 1
     LET FETS(8, LL) = 1
     LET FETS(9, LL) = 1
     LET FETS(10, LL) = 1
     LET FETS(11, LL) = 1
     LET FETS(12, LL) = 1
     LET FETS(13, LL) = 1
     LET FETS(14, LL) = 1
     LET FETS(20, LL) = 1
     LET FETS(21, LL) = 1
     LET FETS(22, LL) = 1
     LET FETS(23, LL) = 1
     LET FETS(24, LL) = 1
     LET FETS(25, LL) = 1
   LOOP LL
 END IF
IF YEAR GE 2020; DO
  FOR JJ=1 TO 71
    LET MEFI(17,JJ)=10
    LET MEFI(18,JJ)=10
  LOOP JJ
END IF
 IF YEAR GE 2021 LE 2035; DO
   FOR LL =1 TO 71
     LET SEWT(4,LL) = -0.1
     LET SEWT(5,LL) = -0.1
     LET SEWT(6,LL) = -0.1
     LET SEWT(7,LL) = -0.1
     LET SEWT(14,LL) = -0.1
     LET SEWT(15,LL) = -0.1
     LET SEWT(18,LL) = -0.1
     LET SEWT(19,LL) = -0.1
     LET SEWT(20,LL) = -0.1
     LET SEWT(24,LL) = -0.1
   LOOP LL
 END IF
 IF YEAR GE 2036 LE 2050; DO
   FOR LL =1 TO 71
     LET SEWT(4,LL) = -0.1+0.006*(YEAR-2035) 
     LET SEWT(5,LL) = -0.1+0.006*(YEAR-2035) 
     LET SEWT(6,LL) = -0.1+0.006*(YEAR-2035) 
     LET SEWT(7,LL) = -0.1+0.006*(YEAR-2035) 
     LET SEWT(14,LL) = -0.1+0.006*(YEAR-2035) 
     LET SEWT(15,LL) = -0.1+0.006*(YEAR-2035) 
     LET SEWT(18,LL) = -0.1+0.006*(YEAR-2035) 
     LET SEWT(19,LL) = -0.1+0.006*(YEAR-2035) 
     LET SEWT(20,LL) = -0.1+0.006*(YEAR-2035) 
     LET SEWT(24,LL) = -0.1+0.006*(YEAR-2035) 
   LOOP LL
 END IF
 IF YEAR GE 2020 LE 2050; DO
   FOR LL =1 TO 71
     LET SEWT(8,LL) = -0.2
     LET SEWT(9,LL) = -0.2
     LET SEWT(10,LL) = -0.2
     LET SEWT(11,LL) = -0.2
   LOOP LL
 END IF

 IF YEAR GE 2021 LE 2035; DO
   FOR LL =1 TO 71
     LET STRT(15,LL) = -0.05
     LET STRT(18,LL) = -0.1
   LOOP LL
 END IF
 IF YEAR GE 2036 LE 2045; DO
   FOR LL =1 TO 71
     LET STRT(15,LL) = -0.05+0.005*(YEAR-2035) 
     LET STRT(18,LL) = -0.1+0.01*(YEAR-2035) 
   LOOP LL
 END IF
 IF YEAR EQ 2015; DO
   FOR LL =1 TO 71
     LET HWSA(9,LL) = 0.01
     LET HWSA(10,LL) = 0.01
     LET HWSA(11,LL) = 0.01
     LET HWSA(12,LL) = 0.01
   LOOP LL
 END IF

 IF YEAR GE 2021 LE 2030; DO
   FOR LL =1 TO 71
     LET HTVS(9,LL) = -0.25
     LET HTVS(13,LL) = -0.25
   LOOP LL
 END IF
 IF YEAR GE 2031 LE 2050; DO
   FOR LL =1 TO 71
     LET HTVS(9,LL) = -0.25+0.0125*(YEAR-2030)
     LET HTVS(13,LL) = -0.25+0.0125*(YEAR-2030)
   LOOP LL
 END IF


IF YEAR GE 2020; DO
  FOR JJ=1 TO 71
    LET MEWT(21,JJ)=-0.2
    LET MEWT(20,JJ)=-0.2
    LET MEWT(22,JJ)=-0.2
    LET MEWT(9,JJ)=-0.2
    LET MEWT(10,JJ)=-0.2
    LET MEWT(15,JJ)=-0.2
  LOOP JJ
END IF


IF YEAR GE 2021; DO
  FOR JJ=1 TO 71
    LET MEWR(3,JJ)=0
  LOOP JJ
END IF


COMM -------------------------------------------------------------------------


COMM Iterate and send to Fortran
 COMPUTE QRY,QRC,QRG,QRK
 FOR ITER = 1 TO 100
  COMPUTE ALL
 LOOP ITER
COMM -------------------------------------------------------------------------


COMM Put results to DUMP
COMM IF YEAR LE 2030; COMM DO

COMM only one dump required
  SELECT OUTPUT 18 DUMP
  FREE
  PUT RESULTS
COMM END
 
COMM IF YEAR EQ 2030; COMM DO
COMM  SELECT OUTPUT 17 DUMP
COMM  FREE ALL
COMM  PUT ALL
COMM END
COMM IF YEAR GE 2031; COMM DO
COMM  SELECT OUTPUT 17 DUMP
COMM  FREE
COMM  PUT RESULTS
COMM END

LOOP YEAR

FINISH